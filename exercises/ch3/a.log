==00:00:00:00.000 28787== Memcheck, a memory error detector
==00:00:00:00.000 28787== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==00:00:00:00.000 28787== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==00:00:00:00.000 28787== Command: ./a.out
==00:00:00:00.000 28787== Parent PID: 24527
==00:00:00:00.000 28787== 
--00:00:00:00.000 28787-- 
--00:00:00:00.000 28787-- Valgrind options:
--00:00:00:00.000 28787--    --tool=memcheck
--00:00:00:00.000 28787--    --show-reachable=yes
--00:00:00:00.000 28787--    --leak-check=full
--00:00:00:00.000 28787--    --read-var-info=yes
--00:00:00:00.000 28787--    --verbose
--00:00:00:00.000 28787--    --error-limit=yes
--00:00:00:00.000 28787--    --time-stamp=yes
--00:00:00:00.000 28787--    --log-file=a.log
--00:00:00:00.000 28787-- Contents of /proc/version:
--00:00:00:00.000 28787--   Linux version 4.12.0-kali1-amd64 (devel@kali.org) (gcc version 6.4.0 20170820 (Debian 6.4.0-4) ) #1 SMP Debian 4.12.6-1kali6 (2017-08-30)
--00:00:00:00.000 28787-- 
--00:00:00:00.000 28787-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--00:00:00:00.000 28787-- Page sizes: currently 4096, max supported 4096
--00:00:00:00.000 28787-- Valgrind library directory: /usr/lib/valgrind
--00:00:00:00.001 28787-- Reading syms from /root/C/exercises/ch3/a.out
--00:00:00:00.001 28787-- Reading syms from /lib/x86_64-linux-gnu/ld-2.24.so
--00:00:00:00.002 28787--   Considering /usr/lib/debug/.build-id/93/c123cbc9d19f47fb995008fb2c55f0689fea8c.debug ..
--00:00:00:00.002 28787--   .. build-id is valid
--00:00:00:00.669 28787-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--00:00:00:00.669 28787--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--00:00:00:00.690 28787--   .. CRC mismatch (computed cc94779b wanted 23911726)
--00:00:00:00.690 28787--   Considering /usr/lib/debug/usr/lib/valgrind/memcheck-amd64-linux ..
--00:00:00:00.787 28787--   .. CRC is valid
--00:00:00:00.794 28787--    object doesn't have a dynamic symbol table
--00:00:00:02.371 28787-- warning: addVar: unknown size (sps)
--00:00:00:02.371 28787-- warning: addVar: unknown size (sps)
--00:00:00:02.372 28787-- warning: addVar: unknown size (ips)
--00:00:00:02.373 28787-- warning: addVar: unknown size (qualname)
--00:00:00:02.376 28787-- warning: addVar: unknown size (qualname)
--00:00:00:02.376 28787-- warning: addVar: unknown size (qualname)
--00:00:00:02.376 28787-- warning: addVar: unknown size (qualname)
--00:00:00:02.405 28787-- warning: addVar: unknown size (buf)
--00:00:00:02.529 28787-- Scheduler: using generic scheduler lock implementation.
--00:00:00:02.532 28787-- Reading suppressions file: /usr/lib/valgrind/default.supp
==00:00:00:02.535 28787== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28787-by-root-on-???
==00:00:00:02.535 28787== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28787-by-root-on-???
==00:00:00:02.535 28787== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28787-by-root-on-???
==00:00:00:02.535 28787== 
==00:00:00:02.535 28787== TO CONTROL THIS PROCESS USING vgdb (which you probably
==00:00:00:02.535 28787== don't want to do, unless you know exactly what you're doing,
==00:00:00:02.535 28787== or are doing some strange experiment):
==00:00:00:02.535 28787==   /usr/lib/valgrind/../../bin/vgdb --pid=28787 ...command...
==00:00:00:02.535 28787== 
==00:00:00:02.535 28787== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==00:00:00:02.535 28787==   /path/to/gdb ./a.out
==00:00:00:02.535 28787== and then give GDB the following command
==00:00:00:02.535 28787==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=28787
==00:00:00:02.535 28787== --pid is optional if only one valgrind process is running
==00:00:00:02.535 28787== 
--00:00:00:02.556 28787-- REDIR: 0x401b2b0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580a7611 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--00:00:00:02.592 28787-- REDIR: 0x4019b60 (ld-linux-x86-64.so.2:index) redirected to 0x580a762b (vgPlain_amd64_linux_REDIR_FOR_index)
--00:00:00:02.636 28787-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--00:00:00:02.636 28787--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--00:00:00:02.636 28787--   .. CRC mismatch (computed 295d56e8 wanted 0e0693fa)
--00:00:00:02.636 28787--   Considering /usr/lib/debug/usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--00:00:00:02.636 28787--   .. CRC is valid
--00:00:00:02.648 28787-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--00:00:00:02.649 28787--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--00:00:00:02.649 28787--   .. CRC mismatch (computed d787cc08 wanted 14e94c02)
--00:00:00:02.649 28787--   Considering /usr/lib/debug/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--00:00:00:02.651 28787--   .. CRC is valid
==00:00:00:02.689 28787== WARNING: new redirection conflicts with existing -- ignoring it
--00:00:00:02.689 28787--     old: 0x0401b2b0 (strlen              ) R-> (0000.0) 0x580a7611 vgPlain_amd64_linux_REDIR_FOR_strlen
--00:00:00:02.689 28787--     new: 0x0401b2b0 (strlen              ) R-> (2007.0) 0x04c2eea0 strlen
--00:00:00:02.698 28787-- REDIR: 0x4019d80 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2ffa0 (strcmp)
--00:00:00:02.702 28787-- REDIR: 0x401bdc0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c33370 (mempcpy)
--00:00:00:02.723 28787-- Reading syms from /lib/x86_64-linux-gnu/libc-2.24.so
--00:00:00:02.724 28787--   Considering /usr/lib/debug/.build-id/ad/f51e0aeadeab97be8477c04b75c4be44c3fc03.debug ..
--00:00:00:02.724 28787--   .. build-id is valid
--00:00:00:10.378 28787-- warning: addVar: unknown size (to_buf)
--00:00:00:10.393 28787-- warning: addVar: unknown size (buffer)
--00:00:00:10.736 28787-- REDIR: 0x4ebc710 (libc.so.6:strcasecmp) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.739 28787-- REDIR: 0x4eb81b0 (libc.so.6:strcspn) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.740 28787-- REDIR: 0x4ebea00 (libc.so.6:strncasecmp) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.740 28787-- REDIR: 0x4eba620 (libc.so.6:strpbrk) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.741 28787-- REDIR: 0x4eba9b0 (libc.so.6:strspn) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.743 28787-- REDIR: 0x4ebbd80 (libc.so.6:memmove) redirected to 0x4a26740 (_vgnU_ifunc_wrapper)
--00:00:00:10.766 28787-- REDIR: 0x4eba330 (libc.so.6:rindex) redirected to 0x4c2e830 (rindex)
--00:00:00:10.794 28787-- REDIR: 0x4ec2710 (libc.so.6:strchrnul) redirected to 0x4c32ea0 (strchrnul)
--00:00:00:10.800 28787-- REDIR: 0x4eb2f10 (libc.so.6:malloc) redirected to 0x4c2bb80 (malloc)
==00:00:00:14.387 28787== Use of uninitialised value of size 8
==00:00:00:14.387 28787==    at 0x4E917C4: _IO_vfscanf (vfscanf.c:1902)
==00:00:00:14.387 28787==    by 0x4E9CFBE: __isoc99_scanf (isoc99_scanf.c:37)
==00:00:00:14.387 28787==    by 0x1086E5: main (in /root/C/exercises/ch3/a.out)
==00:00:00:14.387 28787== 
==00:00:00:14.389 28787== Invalid write of size 4
==00:00:00:14.389 28787==    at 0x4E917C4: _IO_vfscanf (vfscanf.c:1902)
==00:00:00:14.389 28787==    by 0x4E9CFBE: __isoc99_scanf (isoc99_scanf.c:37)
==00:00:00:14.389 28787==    by 0x1086E5: main (in /root/C/exercises/ch3/a.out)
==00:00:00:14.389 28787==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==00:00:00:14.389 28787== 
==00:00:00:14.389 28787== 
==00:00:00:14.389 28787== Process terminating with default action of signal 11 (SIGSEGV)
==00:00:00:14.389 28787==  Access not within mapped region at address 0x0
==00:00:00:14.389 28787==    at 0x4E917C4: _IO_vfscanf (vfscanf.c:1902)
==00:00:00:14.389 28787==    by 0x4E9CFBE: __isoc99_scanf (isoc99_scanf.c:37)
==00:00:00:14.389 28787==    by 0x1086E5: main (in /root/C/exercises/ch3/a.out)
==00:00:00:14.389 28787==  If you believe this happened as a result of a stack
==00:00:00:14.389 28787==  overflow in your program's main thread (unlikely but
==00:00:00:14.389 28787==  possible), you can try to increase the size of the
==00:00:00:14.389 28787==  main thread stack using the --main-stacksize= flag.
==00:00:00:14.389 28787==  The main thread stack size used in this run was 8388608.
--00:00:00:14.407 28787-- REDIR: 0x4eb3510 (libc.so.6:free) redirected to 0x4c2cdb0 (free)
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== HEAP SUMMARY:
==00:00:00:14.420 28787==     in use at exit: 0 bytes in 0 blocks
==00:00:00:14.420 28787==   total heap usage: 2 allocs, 2 frees, 2,048 bytes allocated
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== All heap blocks were freed -- no leaks are possible
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== Use --track-origins=yes to see where uninitialised values come from
==00:00:00:14.420 28787== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== 1 errors in context 1 of 2:
==00:00:00:14.420 28787== Invalid write of size 4
==00:00:00:14.420 28787==    at 0x4E917C4: _IO_vfscanf (vfscanf.c:1902)
==00:00:00:14.420 28787==    by 0x4E9CFBE: __isoc99_scanf (isoc99_scanf.c:37)
==00:00:00:14.420 28787==    by 0x1086E5: main (in /root/C/exercises/ch3/a.out)
==00:00:00:14.420 28787==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== 1 errors in context 2 of 2:
==00:00:00:14.420 28787== Use of uninitialised value of size 8
==00:00:00:14.420 28787==    at 0x4E917C4: _IO_vfscanf (vfscanf.c:1902)
==00:00:00:14.420 28787==    by 0x4E9CFBE: __isoc99_scanf (isoc99_scanf.c:37)
==00:00:00:14.420 28787==    by 0x1086E5: main (in /root/C/exercises/ch3/a.out)
==00:00:00:14.420 28787== 
==00:00:00:14.420 28787== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
